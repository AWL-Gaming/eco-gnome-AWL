// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ecocraft.Models;

#nullable disable

namespace ecocraft.Migrations
{
    [DbContext(typeof(EcoCraftDbContext))]
    [Migration("20240912090313_usercraftingtable")]
    partial class usercraftingtable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("ecocraft.Models.CraftingTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CraftingTables");
                });

            modelBuilder.Entity("ecocraft.Models.CraftingTableUpgrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CraftingTableId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UpgradeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CraftingTableId");

                    b.HasIndex("UpgradeId");

                    b.ToTable("CraftingTableUpgrades");
                });

            modelBuilder.Entity("ecocraft.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CaloriesRequired")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CraftingTableId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MinimumSkillLevel")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CraftingTableId");

                    b.HasIndex("SkillId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("ecocraft.Models.RecipeMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsFixedQuantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeMaterials");
                });

            modelBuilder.Entity("ecocraft.Models.RecipeOutput", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("OutputName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RecipeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeOutputs");
                });

            modelBuilder.Entity("ecocraft.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("ecocraft.Models.Upgrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("CostReduction")
                        .HasColumnType("REAL");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Upgrades");
                });

            modelBuilder.Entity("ecocraft.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("CalorieCost")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ProfitMargin")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ecocraft.Models.UserCraftingTable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CraftingTableId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UpgradeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CraftingTableId");

                    b.HasIndex("UpgradeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCraftingTables");
                });

            modelBuilder.Entity("ecocraft.Models.UserInputPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("InputName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserInputPrices");
                });

            modelBuilder.Entity("ecocraft.Models.UserSkill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Level")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SkillId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SkillId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSkills");
                });

            modelBuilder.Entity("ecocraft.Models.CraftingTableUpgrade", b =>
                {
                    b.HasOne("ecocraft.Models.CraftingTable", "CraftingTable")
                        .WithMany("CraftingTableUpgrades")
                        .HasForeignKey("CraftingTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ecocraft.Models.Upgrade", "Upgrade")
                        .WithMany("CraftingTableUpgrades")
                        .HasForeignKey("UpgradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CraftingTable");

                    b.Navigation("Upgrade");
                });

            modelBuilder.Entity("ecocraft.Models.Recipe", b =>
                {
                    b.HasOne("ecocraft.Models.CraftingTable", "CraftingTable")
                        .WithMany("Recipes")
                        .HasForeignKey("CraftingTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ecocraft.Models.Skill", "Skill")
                        .WithMany("Recipes")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CraftingTable");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("ecocraft.Models.RecipeMaterial", b =>
                {
                    b.HasOne("ecocraft.Models.Recipe", "Recipe")
                        .WithMany("RecipeMaterials")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ecocraft.Models.RecipeOutput", b =>
                {
                    b.HasOne("ecocraft.Models.Recipe", "Recipe")
                        .WithMany("RecipeOutputs")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("ecocraft.Models.UserCraftingTable", b =>
                {
                    b.HasOne("ecocraft.Models.CraftingTable", "CraftingTable")
                        .WithMany()
                        .HasForeignKey("CraftingTableId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ecocraft.Models.Upgrade", "Upgrade")
                        .WithMany()
                        .HasForeignKey("UpgradeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ecocraft.Models.User", "User")
                        .WithMany("UserCraftingTables")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CraftingTable");

                    b.Navigation("Upgrade");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ecocraft.Models.UserInputPrice", b =>
                {
                    b.HasOne("ecocraft.Models.User", "User")
                        .WithMany("UserInputPrices")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ecocraft.Models.UserSkill", b =>
                {
                    b.HasOne("ecocraft.Models.Skill", "Skill")
                        .WithMany("UserSkills")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ecocraft.Models.User", "User")
                        .WithMany("UserSkills")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Skill");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ecocraft.Models.CraftingTable", b =>
                {
                    b.Navigation("CraftingTableUpgrades");

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("ecocraft.Models.Recipe", b =>
                {
                    b.Navigation("RecipeMaterials");

                    b.Navigation("RecipeOutputs");
                });

            modelBuilder.Entity("ecocraft.Models.Skill", b =>
                {
                    b.Navigation("Recipes");

                    b.Navigation("UserSkills");
                });

            modelBuilder.Entity("ecocraft.Models.Upgrade", b =>
                {
                    b.Navigation("CraftingTableUpgrades");
                });

            modelBuilder.Entity("ecocraft.Models.User", b =>
                {
                    b.Navigation("UserCraftingTables");

                    b.Navigation("UserInputPrices");

                    b.Navigation("UserSkills");
                });
#pragma warning restore 612, 618
        }
    }
}
