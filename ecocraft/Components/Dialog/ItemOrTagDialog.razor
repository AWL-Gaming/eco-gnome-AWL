@using ecocraft.Models
@using ecocraft.Services
@using ecocraft.Components.Utils
@inject ServerDataService ServerDataService
@inject LocalizationService LocalizationService

<MudDialog Style="min-height: 500px;">
    <TitleContent>
        <MudStack Row AlignItems="AlignItems.Center" Spacing="1">
            <EcoIcon Item="@ItemOrTag" Size="64" />
            <MudText Typo="Typo.h6">@LocalizationService.GetTranslation(ItemOrTag)</MudText>
        </MudStack>
    </TitleContent>
    <DialogContent>
        <MudStack Spacing="12">
            @if (ItemOrTag.MinPrice is not null || ItemOrTag.DefaultPrice is not null || ItemOrTag.MaxPrice is not null)
            {
                <MudStack Spacing="1">
                    <MudText Typo="Typo.h6">@LocalizationService.GetTranslation("ItemOrTagDialog.ServerPrices")</MudText>
                    <MudStack Row Spacing="18">
                        @if (ItemOrTag.MinPrice is not null)
                        {
                            <MudText>@LocalizationService.GetTranslation("ItemOrTagDialog.MinPrice"): @ItemOrTag.MinPrice $</MudText>
                        }
                        @if (ItemOrTag.DefaultPrice is not null)
                        {
                            <MudText>@LocalizationService.GetTranslation("ItemOrTagDialog.DefaultPrice"): @ItemOrTag.DefaultPrice $</MudText>
                        }
                        @if (ItemOrTag.MaxPrice is not null)
                        {
                            <MudText>@LocalizationService.GetTranslation("ItemOrTagDialog.MaxPrice"): @ItemOrTag.MaxPrice $</MudText>
                        }
                    </MudStack>
                </MudStack>
            }

            @if (!ItemOrTag.IsTag)
            {
                var recipes = ServerDataService.Recipes.Where(r => r.Elements.Where(e => e.IsProduct()).Select(e => e.ItemOrTag).Contains(ItemOrTag)).ToList();

                @if (recipes.Count > 0)
                {
                    <MudStack>
                        <MudText Typo="Typo.h6">@LocalizationService.GetTranslation("ItemOrTagDialog.ProducedBy")</MudText>
                        <RecipeList Recipes="@recipes"/>
                    </MudStack>
                }
            }

            @{
                var recipes2 = ServerDataService.Recipes.Where(r => r.Elements.Where(e => e.IsIngredient()).Select(e => e.ItemOrTag).Contains(ItemOrTag)).ToList();

                @if (recipes2.Count > 0) {
                    <MudStack>
                        <MudText Typo="Typo.h6">@LocalizationService.GetTranslation("ItemOrTagDialog.UsedIn")</MudText>
                        <RecipeList Recipes="@recipes2"/>
                    </MudStack>
                }
            }
        </MudStack>
    </DialogContent>
</MudDialog>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; } = default!;

    [Parameter]
    public ItemOrTag ItemOrTag { get; set; }
}
