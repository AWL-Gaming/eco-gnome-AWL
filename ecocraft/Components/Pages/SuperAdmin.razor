@page "/super-admin"
@implements IDisposable
@inject IJSRuntime JSRuntime
@using ecocraft.Models
@using ecocraft.Services
@using ecocraft.Services.DbServices
@inject ContextService ContextService
@inject EcoCraftDbContext DbContext
@inject NavigationManager Navigation
@inject UserDbService UserDbService
@inject ServerDbService ServerDbService
@inject ISnackbar Snackbar
@inject LocalizationService LocalizationService

<PageTitle>@LocalizationService.GetTranslation("SuperAdmin.Title") - Eco Gnome</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
    @if (_isLoading)
    {
        <MudProgressLinear Color="Color.Tertiary" Indeterminate="true" Class="mb-6" />
    }

    <MudGrid>
        <MudItem lg="6" md="12">
            <MudTable Items="_users"
                      Filter="new Func<User, bool>(SearchUser)"
                      Virtualize="false"
                      FixedHeader="true"
                      Height="400px"
                      Dense="true"
                      Hover="true">
                <HeaderContent>
                    <MudTh>@LocalizationService.GetTranslation("SuperAdmin.IdCol")</MudTh>
                    <MudTh>@LocalizationService.GetTranslation("SuperAdmin.UserTable.PseudoCol")</MudTh>
                    <MudTh>@LocalizationService.GetTranslation("SuperAdmin.CreationDateCol")</MudTh>
                    <MudTh>@LocalizationService.GetTranslation("SuperAdmin.UserTable.ServersCol")</MudTh>
                    <MudTh>@LocalizationService.GetTranslation("SuperAdmin.UserTable.ActionCol")</MudTh>
                </HeaderContent>
                <ToolBarContent>
                    <MudStack Row Justify="Justify.SpaceBetween" Style="width: 100%">
                        <MudText Typo="Typo.h5">@LocalizationService.GetTranslation("SuperAdmin.UserTable.Title")</MudText>
                        <MudStack Style="width: 200px">
                            <MudTextField @bind-Value="searchUser"
                                          Immediate
                                          Placeholder="Search"
                                          Adornment="Adornment.Start"
                                          AdornmentIcon="@Icons.Material.Filled.Search"
                                          IconSize="Size.Small"
                                          Class="mt-0"/>
                        </MudStack>
                    </MudStack>
                </ToolBarContent>
                <RowTemplate>
                    <MudTd>
                        <MudTooltip Text="@context.Id.ToString()">
                            <MudIconButton Icon="@Icons.Material.Outlined.ContentCopy" Size="Size.Small" OnClick="@(() => CopyToClipboard(context.Id.ToString()))"/>
                        </MudTooltip>
                    </MudTd>
                    <MudTd>@context.Pseudo</MudTd>
                    <MudTd>
                        <MudTooltip Text="@context.CreationDateTime.ToString()">
                            <MudIcon Icon="@Icons.Material.Outlined.CalendarMonth" Size="Size.Small"/>
                        </MudTooltip>
                    </MudTd>
                    <MudTd>
                        <MudStack Row Spacing="0" Justify="Justify.Center" Class="gap-0">
                            @context.UserServers.Count
                            <MudTooltip Class="mr-4" Text=@LocalizationService.GetTranslation("SuperAdmin.UserTable.JoinedServers")>
                                <MudIcon Icon="@Icons.Material.Outlined.Dataset" Size="Size.Small"/>
                            </MudTooltip>
                            @context.UserServers.Count(us => us.IsAdmin)
                            <MudTooltip Text=@LocalizationService.GetTranslation("SuperAdmin.UserTable.HowMuchIsAdmin")>
                                <MudIcon Icon="@Icons.Material.Outlined.AdminPanelSettings" Size="Size.Small"/>
                            </MudTooltip>
                        </MudStack>
                    </MudTd>
                    <MudTd>
                        @if (context != ContextService.CurrentUser)
                        {
                            <MudStack Row AlignItems="AlignItems.Center">
                                <MudTooltip Text=@LocalizationService.GetTranslation("SuperAdmin.UserTable.DeleteUser")>
                                    <MudIconButton Icon="@Icons.Material.Filled.DeleteForever"
                                                   Size="Size.Small"
                                                   OnClick="@(() => DeleteUser(context))"/>
                                </MudTooltip>
                                <MudTooltip Text="@(context.SuperAdmin ? @LocalizationService.GetTranslation("SuperAdmin.UserTable.DemoteUser") : @LocalizationService.GetTranslation("SuperAdmin.UserTable.PromoteUser"))">
                                    <MudIconButton Color="@(context.SuperAdmin ? Color.Warning : Color.Error)"
                                                   Icon="@(context.SuperAdmin ? Icons.Material.Filled.KeyboardDoubleArrowDown : Icons.Material.Filled.KeyboardDoubleArrowUp)"
                                                   Size="Size.Small"
                                                   OnClick="@(() => ToggleSuperAdmin(context))"/>
                                </MudTooltip>
                            </MudStack>
                        }
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager PageSizeOptions="new int[] { 10, 25, 50 }"/>
                </PagerContent>
            </MudTable>
        </MudItem>
        <MudItem lg="6" md="12">
            <MudTable Items="_servers"
                      Filter="new Func<Server, bool>(SearchServer)"
                      Virtualize="false"
                      FixedHeader="true"
                      Height="400px"
                      Dense="true"
                      Hover="true">
                <HeaderContent>
                    <MudTh>@LocalizationService.GetTranslation("SuperAdmin.IdCol")</MudTh>
                    <MudTh>@LocalizationService.GetTranslation("SuperAdmin.ServerTable.ServerNameCol")</MudTh>
                    <MudTh>@LocalizationService.GetTranslation("SuperAdmin.CreationDateCol")</MudTh>
                    <MudTh>@LocalizationService.GetTranslation("JoinCode")</MudTh>
                    <MudTh>@LocalizationService.GetTranslation("SuperAdmin.ServerTable.PlayersCol")</MudTh>
                    <MudTh>@LocalizationService.GetTranslation("SuperAdmin.ServerTable.AdminsCol")</MudTh>
                    <MudTh>@LocalizationService.GetTranslation("SuperAdmin.ActionCol")</MudTh>
                </HeaderContent>
                <ToolBarContent>
                    <MudStack Row Justify="Justify.SpaceBetween" Style="width: 100%">
                        <MudText Typo="Typo.h5">@LocalizationService.GetTranslation("SuperAdmin.ServerTable.Title")</MudText>
                        <MudStack Style="width: 200px">
                            <MudTextField @bind-Value="searchServer"
                                          Immediate
                                          Placeholder="Search"
                                          Adornment="Adornment.Start"
                                          AdornmentIcon="@Icons.Material.Filled.Search"
                                          IconSize="Size.Small"
                                          Class="mt-0"/>
                        </MudStack>
                    </MudStack>
                </ToolBarContent>
                <RowTemplate>
                    <MudTd>
                        <MudTooltip Text="@context.Id.ToString()">
                            <MudIconButton Icon="@Icons.Material.Outlined.ContentCopy" Size="Size.Small" OnClick="@(() => CopyToClipboard(context.Id.ToString()))"/>
                        </MudTooltip>
                    </MudTd>
                    <MudTd>@(context.IsDefault ? "[Default]" : "") @context.Name</MudTd>
                    <MudTd>
                        <MudTooltip Text="@context.CreationDateTime.ToString()">
                            <MudIcon Icon="@Icons.Material.Outlined.CalendarMonth" Size="Size.Small"/>
                        </MudTooltip>
                    </MudTd>
                    <MudTd>
                        @context.JoinCode
                    </MudTd>
                    <MudTd>
                        @context.UserServers.Count
                    </MudTd>
                    <MudTd>
                        @(String.Join(", ", context.UserServers.Where(us => us.IsAdmin).Select(us => us.Pseudo)))
                    </MudTd>
                    <MudTd>
                        <MudStack Row AlignItems="AlignItems.Center">
                            <MudTooltip Text=@LocalizationService.GetTranslation("SuperAdmin.ServerTable.DeleteServer")>
                                <MudIconButton Icon="@Icons.Material.Filled.DeleteForever"
                                               Size="Size.Small"
                                               OnClick="@(() => DeleteServer(context))"/>
                            </MudTooltip>
                            <MudTooltip Text="@(context.IsDefault ? LocalizationService.GetTranslation("SuperAdmin.ServerTable.UnsetDefault") : LocalizationService.GetTranslation("SuperAdmin.ServerTable.SetDefault"))">
                                <MudIconButton Icon="@(context.IsDefault ? Icons.Material.Outlined.CreditCardOff : Icons.Material.Outlined.CreditCard)"
                                               Color="@(context.IsDefault ? Color.Warning : Color.Error)"
                                               Size="Size.Small"
                                               OnClick="@(() => ToggleDefault(context))"/>
                            </MudTooltip>
                            <MudTooltip Text="@(ContextService.CurrentUser!.UserServers.FirstOrDefault(us => us.Server == context)?.IsAdmin ?? false ? LocalizationService.GetTranslation("SuperAdmin.ServerTable.DemoteAdmin") : LocalizationService.GetTranslation("SuperAdmin.ServerTable.PromoteAdmin"))">
                                <MudIconButton Icon="@(ContextService.CurrentUser!.UserServers.FirstOrDefault(us => us.Server == context)?.IsAdmin ?? false ? Icons.Material.Filled.ArrowDownward : Icons.Material.Filled.ArrowUpward)"
                                               Size="Size.Small"
                                               Color="@(ContextService.CurrentUser!.UserServers.FirstOrDefault(us => us.Server == context)?.IsAdmin ?? false ? Color.Warning : Color.Primary)"
                                               OnClick="@(() => ToggleSelfAdmin(context))"/>
                            </MudTooltip>
                        </MudStack>
                    </MudTd>
                </RowTemplate>
                <PagerContent>
                    <MudTablePager PageSizeOptions="new int[] { 10, 25, 50 }"/>
                </PagerContent>
            </MudTable>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    private bool _isLoading = false;
    private protected List<User> _users = [];
    private protected List<Server> _servers = [];
    private string searchUser = "";
    private string searchServer = "";

    protected override void OnInitialized()
    {
        if (ContextService.CurrentUser == null || !ContextService.CurrentUser.SuperAdmin)
        {
            Navigation.NavigateTo("/");
        }
    }

    protected override async Task OnInitializedAsync()
    {
        ContextService.OnContextChanged += StateHasChanged;

        _users = await UserDbService.GetAllAsync();
        _servers = await ServerDbService.GetAllAsync();
    }

    public void Dispose()
    {
        ContextService.OnContextChanged -= StateHasChanged;
    }

    private async Task CopyToClipboard(string text)
    {
        await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", text);
        Snackbar.Add(LocalizationService.GetTranslation("SuperAdmin.SnackbarCopy"), Severity.Info);
    }

    private async Task ToggleSuperAdmin(User user)
    {
        if (user == ContextService.CurrentUser)
        {
            this.Snackbar.Add(LocalizationService.GetTranslation("SuperAdmin.SnackbarCantEdit"), Severity.Error);
            return;
        }

        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"{LocalizationService.GetTranslation("SuperAdmin.ConfirmSuperAdmin.1")} {(user.SuperAdmin ? LocalizationService.GetTranslation("SuperAdmin.ConfirmSuperAdmin.2") : LocalizationService.GetTranslation("SuperAdmin.ConfirmSuperAdmin.3"))} {LocalizationService.GetTranslation("SuperAdmin.ConfirmSuperAdmin.4")} {(user.SuperAdmin ? LocalizationService.GetTranslation("SuperAdmin.ConfirmSuperAdmin.5") : LocalizationService.GetTranslation("SuperAdmin.ConfirmSuperAdmin.6"))} {LocalizationService.GetTranslation("SuperAdmin.ConfirmSuperAdmin.7")}");

        if (confirmed)
        {
            bool confirmedTwice = await JSRuntime.InvokeAsync<bool>("confirm", LocalizationService.GetTranslation("SuperAdmin.ConfirmTwiceSuperAdmin"));

            if (confirmedTwice)
            {
                user.SuperAdmin = !user.SuperAdmin;
                await DbContext.SaveChangesAsync();
                StateHasChanged();
            }
        }
    }

    private async Task ToggleDefault(Server server)
    {
        server.IsDefault = !server.IsDefault;
        await DbContext.SaveChangesAsync();
    }

    private bool SearchUser(User user)
    {
        if (string.IsNullOrWhiteSpace(searchUser))
            return true;
        if (user.Pseudo.Contains(searchUser, StringComparison.OrdinalIgnoreCase))
            return true;
        if (user.Id.ToString().Contains(searchUser, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    private bool SearchServer(Server server)
    {
        if (string.IsNullOrWhiteSpace(searchServer))
            return true;
        if (server.Name.Contains(searchServer, StringComparison.OrdinalIgnoreCase))
            return true;
        if (server.Id.ToString().Contains(searchServer, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    private async Task DeleteUser(User user)
    {
        if (user == ContextService.CurrentUser)
        {
            this.Snackbar.Add(LocalizationService.GetTranslation("SuperAdmin.SnackBar.CantDeleteYourself"), Severity.Error);
            return;
        }

        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"{LocalizationService.GetTranslation("SuperAdmin.ConfirmUserDeletion.1")} {user.Pseudo} {LocalizationService.GetTranslation("SuperAdmin.ConfirmUserDeletion.2")}");

        if (confirmed)
        {
            _isLoading = true;
            StateHasChanged();
            UserDbService.Delete(user);
            await DbContext.SaveChangesAsync();
            _users = await UserDbService.GetAllAsync();
            _isLoading = false;
            StateHasChanged();
        }
    }

    private async Task ToggleSelfAdmin(Server server)
    {
        var currentUserServer = ContextService.CurrentUser!.UserServers.FirstOrDefault(us => us.Server == server);

        if (currentUserServer is not null)
        {
            currentUserServer.IsAdmin = !currentUserServer.IsAdmin;

            await DbContext.SaveChangesAsync();
        }
        else
        {
            await ContextService.JoinServer(server, true);
        }

        _servers = await ServerDbService.GetAllAsync();
    }

    private async Task DeleteServer(Server server)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"{LocalizationService.GetTranslation("SuperAdmin.ConfirmServerDeletion.1")} {server.Name} {LocalizationService.GetTranslation("SuperAdmin.ConfirmServerDeletion.2")}");

        if (confirmed)
        {
            _isLoading = true;
            StateHasChanged();
            ServerDbService.Delete(server);
            await DbContext.SaveChangesAsync();
            _servers = await ServerDbService.GetAllAsync();
            _isLoading = false;
            StateHasChanged();
        }
    }

}
